//
//  ViewController.swift
//  Remote Led
//
//  Created by Alfredo Mendez on 04/08/15.
//  Copyright (c) 2015 bitShake. All rights reserved.
//

import UIKit

class ViewController: UIViewController {
    override func viewDidLoad() {
        super.viewDidLoad()
        // Do any additional setup after loading the view, typically from a nib.
        
    }

    @IBOutlet var statLabel: UILabel!
    
    

    struct MyViewState {
        static var toogle = false
        static var stringPost="args=on"
    }
    
    
    @IBAction func botonOn(sender: AnyObject) {
    
        
        
        
        let urlPath: String = "https://api.particle.io/v1/devices/DEVICE_ID/led?access_token=DEVIC_TOKEN"
        var url: NSURL = NSURL(string: urlPath)!
        var request1: NSMutableURLRequest = NSMutableURLRequest(URL: url)
        
        request1.HTTPMethod = "POST"
        
        !MyViewState.toogle
        let state = MyViewState.toogle
        println(state)
        
        
        if (state == true){
        MyViewState.stringPost = "args=on" // Key and Value
            self.statLabel.text = "Apagar"
            }
        else{
        MyViewState.stringPost = "args=off" // Key and Value
            self.statLabel.text = "Encender"
        }
        
        let strPost = MyViewState.stringPost
        
        let data = strPost.dataUsingEncoding(NSUTF8StringEncoding)
        
        request1.timeoutInterval = 60
        request1.HTTPBody=data
        request1.HTTPShouldHandleCookies=false
        
        let queue:NSOperationQueue = NSOperationQueue()
        
        NSURLConnection.sendAsynchronousRequest(request1, queue: queue, completionHandler:{ (response: NSURLResponse!, data: NSData!, error: NSError!) -> Void in
            var err: NSError
            var jsonResult: NSDictionary = NSJSONSerialization.JSONObjectWithData(data, options: NSJSONReadingOptions.MutableContainers, error: nil) as! NSDictionary
            println("AsSynchronous\(jsonResult)")
        })
        

        println("presionado")
        MyViewState.toogle = !state
    
}
}
